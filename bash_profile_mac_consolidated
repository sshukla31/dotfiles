# Setup color for terminal
alias ls='ls -GFh'
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# MacPort
export PATH=/opt/local/bin:/opt/local/sbin:$PATH

# Add bash aliases.
if [ -f ~/.bashrc_git ]; then
    source ~/.bashrc_git
fi


# Setting PATH for Python 3.4
# The orginal version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin:${PATH}"
export PATH

alias n4='ssh sandeep@niara4'
alias devvm='ssh root@10.43.7.152'        # pass: testpw
alias analyzer='ssh root@10.43.7.165'  # pass: testpw
alias sensor='ssh root@10.43.7.105'    # pass: tulita123


#
# Color options
#
c_reset='\[\e[0m\]'
c_black='\[\e[0;30m\]'
c_dark_grey='\[\e[1;30m\]'
c_blue='\[\e[0;34m\]'
c_light_blue='\[\e[1;34m\]'
c_green='\[\e[0;32m\]'
c_light_green='\[\e[1;32m\]'
c_cyan='\[\e[0;36m\]'
c_light_cyan='\[\e[1;36m\]'
c_red='\[\e[0;31m\]'
c_light_red='\[\e[1;31m\]'
c_purple='\[\e[0;35m\]'
c_light_purple='\[\e[1;35m\]'
c_brown='\[\e[0;33m\]'
c_yellow='\[\e[1;33m\]'
c_light_grey='\[\e[0;37m\]'
c_white='\[\e[1;37m\]'






# Git bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# Configure colors, if available.
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    c_user=$c_green
    c_path=$c_cyan
    c_host=$c_purple
    c_git_clean=$c_light_grey
    c_git_staged=$c_green
    c_git_unstaged=$c_red
else
    c_reset=
    c_user=
    c_path=
    c_git_clean=
    c_git_staged=
    c_git_unstaged=
fi

## Add the titlebar information when it is supported.
case $TERM in
xterm*|rxvt*)
    TITLEBAR='echo -ne "\033]0;${HOSTNAME} (`basename "${PWD}"`)\007";';
    ;;
screen*)
    TITLEBAR='echo -ne "\033k\033\134\033k${HOSTNAME} (`basename "${PWD}"`)\033\134";';
    ;;
*)
    TITLEBAR="";
    ;;
esac

## Function to assemble the Git parsingart of our prompt.
git_prompt ()
{
    GIT_DIR=`git rev-parse --git-dir 2>/dev/null`
    if [ -z "$GIT_DIR" ]; then
        return 0
    fi
    GIT_HEAD=`cat $GIT_DIR/HEAD`
    GIT_BRANCH=${GIT_HEAD##*/}
    if [ ${#GIT_BRANCH} -eq 40 ]; then
        GIT_BRANCH="(no branch)"
    fi
    STATUS=`git status --porcelain`
    if [ -z "$STATUS" ]; then
        git_color="${c_git_clean}"
    else
        echo -e "$STATUS" | grep -q '^ [A-Z\?]'
        if [ $? -eq 0 ]; then
            git_color="${c_git_unstaged}"
        else
            git_color="${c_git_staged}"
        fi
    fi
    echo "(${git_color}$GIT_BRANCH${c_reset})"
}

## Setup virutalenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/test_programs
source /usr/local/bin/virtualenvwrapper.sh


## Not really the right place for it, but mixing in virtualenv path mods here too
venv_prompt ()
{
    if [ ! -z "$VIRTUAL_ENV" ]
    then
        echo "(${c_host}`basename $VIRTUAL_ENV`${c_reset}) "
    else
        echo ""
    fi
}


path="${c_path}\w${c_reset}"
user="${c_user}\u${c_reset}"
host="${c_host}\h${c_reset}"

prompt="\$(venv_prompt)${path} \$(git_prompt) \n[${user}@${host}]\$ "
PROMPT_COMMAND="$TITLEBAR PS1=\"${prompt}\" ;"
