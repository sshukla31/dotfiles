# Git bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# Configure colors, if available.
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    c_user=$c_green
    c_path=$c_cyan
    c_host=$c_purple
    c_git_clean=$c_light_grey
    c_git_staged=$c_green
    c_git_unstaged=$c_red
else
    c_reset=
    c_user=
    c_path=
    c_git_clean=
    c_git_staged=
    c_git_unstaged=
fi

# Add the titlebar information when it is supported.
case $TERM in
xterm*|rxvt*)
    TITLEBAR='echo -ne "\033]0;${HOSTNAME} (`basename "${PWD}"`)\007";';
    ;;
screen*)
    TITLEBAR='echo -ne "\033k\033\134\033k${HOSTNAME} (`basename "${PWD}"`)\033\134";';
    ;;
*)
    TITLEBAR="";
    ;;
esac

# Function to assemble the Git parsingart of our prompt.
git_prompt ()
{
    GIT_DIR=`git rev-parse --git-dir 2>/dev/null`
    if [ -z "$GIT_DIR" ]; then
        return 0
    fi
    GIT_HEAD=`cat $GIT_DIR/HEAD`
    GIT_BRANCH=${GIT_HEAD##*/}
    if [ ${#GIT_BRANCH} -eq 40 ]; then
        GIT_BRANCH="(no branch)"
    fi
    STATUS=`git status --porcelain`
    if [ -z "$STATUS" ]; then
        git_color="${c_git_clean}"
    else
        echo -e "$STATUS" | grep -q '^ [A-Z\?]'
        if [ $? -eq 0 ]; then
            git_color="${c_git_unstaged}"
        else
            git_color="${c_git_staged}"
        fi
    fi
    echo "(${git_color}$GIT_BRANCH${c_reset})"
}

path="${c_path}\w${c_reset}"
user="${c_user}\u${c_reset}"
host="${c_host}\h${c_reset}"